// Copyright (C) 2020 carddamom
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

const npsUtils = require('nps-utils');

module.exports = {
  scripts: {
    clean: {
      default: {
        script: npsUtils.concurrent.nps('clean.temp', 'clean.lib', 'clean.migrations', 'clean.dist', 'clean.manifest','clean.docs','clean.website'),
        description: 'cleans the build artifacts',
      },
      temp: {
        script: npsUtils.rimraf('tmp'),
        description: 'cleans the temp folder from oclif-dev pack',
        hiddenFromHelp: true,
      },
      lib: {
        script: npsUtils.rimraf('lib'),
        description: 'cleans the lib folder from the compiled typescript files',
        hiddenFromHelp: true,
      },
      dist: {
        script: npsUtils.rimraf('dist'),
        description: 'cleans the dist folder',
        hiddenFromHelp: true,
      },
      manifest: {
        script: npsUtils.rimraf('oclif.manifest.json'),
        description: 'cleans the oclif manifest file',
        hiddenFromHelp: true,
      },
      migrations: {
        script: npsUtils.rimraf('migrations'),
        description: 'cleans the migrations folder',
        hiddenFromHelp: true,
      },
      docs: {
        script: npsUtils.rimraf('docs'),
        description: 'cleans the documentation folder',
        hiddenFromHelp: true,
      },
      website: {
        script: npsUtils.rimraf('website'),
        description: 'cleans the website folder generated by the typedoc-plugin-markdown',
        hiddenFromHelp: true,
      },
    },
    postpack: {
      script: npsUtils.series.nps('clean.manifest'),
      description: 'oclif-dev postpack script in a cross-platform way',
      //"postpack": "rm -f oclif.manifest.json",
    },
    prepack: {
      default: {
        script: npsUtils.series.nps('clean','prepack.build','prepack.remove_uneeded','prepack.manifest'),
        description: 'oclif-dev prepack script in a cross platform way',
        //prepack: 'rm -rf lib && tsc -b && oclif-dev manifest',
      },
      build: {
        script: 'tsc -b',
        description: 'compiles the typescript files',
        hiddenFromHelp: true,
      },
      remove_uneeded: {
        script: npsUtils.rimraf('./migrations/*.d.ts ./migrations/tsconfig.tsbuildinfo'),
        description: 'removes unwanted stuff from typescript compilation',
        hiddenFromHelp: true,
      },
      manifest: {
        script: 'oclif-dev manifest',
        description: 'generates the oclif-dev manifest',
        hiddenFromHelp: true,
      },
    },
    build: {
      default: {
        script: npsUtils.series.nps('build.lock','build.dist'),
        description: 'generates the final output files',
      },
      lock: {
        script: 'npm i --package-lock-only',
        description: 'update the npm package-lock.json file only, so that oclif-dev can use it',
        hiddenFromHelp: true,
      },
      dist: {
        script: 'oclif-dev pack --targets linux-x64,win32-x64,darwin-x64',
        description: 'generates the final output files',
        hiddenFromHelp: true,
      },
    },
    license: {
      script: 'license-checker',
      description: 'checks the licenses of this package',
    },
    test: {
      default: {
        script: 'mocha --require ts-node/register --watch-extensions ts test/**/*.ts',
        description: 'runs the tests of this package with the normal text reporter',
      },
      secret: {
        script: 'mocha --require ts-node/register --reporter json --watch-extensions ts test/**/*.ts',
        description: 'runs the tests of this package with the json reporter',
        hiddenFromHelp: true,
      },
    },
    coverage: {
      script: 'nyc mocha --require source-map-support/register --require ts-node/register --watch-extensions ts test/**/*.ts',
      description: 'runs the tests of this package with coverage',
    },
    docs: {
      default: {
        script: npsUtils.series.nps('clean.docs','docs.generate','clean.website'),
        description: 'generates the documentation using typedoc in markdown format',
      },
      generate: {
        script: 'typedoc --hideSources --hideBreadcrumbs --theme docusaurus ./src',
        description: 'generates the typedoc documentation in markdown format, so that it can be integrated in the docs branch',
        hiddenFromHelp: true,
      },
    },
  },
};
