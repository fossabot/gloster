{
  "$schema": "./documentation.schema.json",
  "name": "Platform",
  "items": [
    {
      "name": "Browse all platforms",
      "method": "post",
      "url": "/platforms",
      "description": "Returns a list of all available platforms, as a array of responses",
      "request": [
        {
          "name": "lastId",
          "type": "integer",
          "description": "The last platform id sent in the list",
          "location": "query",
          "optional": true
        },
        {
          "name": "Authorization",
          "type": "string",
          "description": "The authentication token",
          "location": "header"
        }
      ],
      "requestBody": {
        "accepted": ["\"application/json\""],
        "items": [
          {
            "name": "fields",
            "type": "array",
            "arrayType": "string",
            "description": "A list of fields returned in the response",
            "optional": true,
            "enum": ["id","name","description","created_at","created_by","modified_at","modified_by"]
          }
        ]
      },
      "response": {
        "accepted": ["\"application/json\""],
        "items": [
          {
            "name": "id",
            "type": "integer",
            "description": "The platform id",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "description": "The platform name",
            "optional": true
          },
          {
            "name": "description",
            "type": "string",
            "description": "The platform description",
            "optional": true
          },
          {
            "name": "created_at",
            "type": "date",
            "description": "The date the platform was created",
            "optional": true
          },
          {
            "name": "created_by",
            "type": "string",
            "description": "The username who created the platform",
            "optional": true
          },
          {
            "name": "modified_at",
            "type": "date",
            "description": "The date the platform was modified",
            "optional": true
          },
          {
            "name": "modified_by",
            "type": "string",
            "description": "The username who modified the platform",
            "optional": true
          }
        ]
      },
      "errors": [
        {
          "id": 2,
          "name": "Unauthenticated request",
          "code": 401,
          "description": "The client has not authenticated himself"
        },
        {
          "id": 7,
          "name": "Request is invalid",
          "code": 400,
          "description": "There is some error with the request message"
        }
      ]
    },
    {
      "name": "Browse platform",
      "method": "post",
      "url": "/platform/{id}",
      "description": "Returns information about a single platform",
      "request": [
        {
          "name": "id",
          "type": "integer",
          "description": "The platform id to be queried",
          "location": "path"
        },
        {
          "name": "Authorization",
          "type": "string",
          "description": "The authentication token",
          "location": "header"
        }
      ],

      "requestBody": {
        "accepted": ["\"application/json\""],
        "items": [
          {
            "name": "fields",
            "type": "array",
            "arrayType": "string",
            "description": "A list of fields returned in the response",
            "optional": true,
            "enum": ["id","name","description","created_at","created_by","modified_at","modified_by"]
          }
        ]
      },
      "response": {
        "accepted": ["\"application/json\""],
        "items": [
          {
            "name": "id",
            "type": "integer",
            "description": "The platform id",
            "optional": true
          },
          {
            "name": "name",
            "type": "string",
            "description": "The platform name",
            "optional": true
          },
          {
            "name": "description",
            "type": "string",
            "description": "The platform description",
            "optional": true
          },
          {
            "name": "created_at",
            "type": "date",
            "description": "The date the platform was created",
            "optional": true
          },
          {
            "name": "created_by",
            "type": "string",
            "description": "The username who created the platform",
            "optional": true
          },
          {
            "name": "modified_at",
            "type": "date",
            "description": "The date the platform was modified",
            "optional": true
          },
          {
            "name": "modified_by",
            "type": "string",
            "description": "The username who modified the platform",
            "optional": true
          }
        ]
      },
      "errors": [
        {
          "id": 2,
          "name": "Unauthenticated request",
          "code": 401,
          "description": "The client has not authenticated himself"
        },
        {
          "id": 7,
          "name": "Request is invalid",
          "code": 400,
          "description": "There is some error with the request message"
        },
        {
          "id": 8,
          "name": "Entity not found",
          "code": 404,
          "description": "The given id does not correspond to an entity"
        }
      ]
    },
    {
      "name": "Create a platform",
      "method": "post",
      "url": "/platform",
      "description": "Creates a platform given its information.",
      "request": [
        {
          "name": "Authorization",
          "type": "string",
          "description": "The authentication token",
          "location": "header"
        }
      ],
      "requestBody": {
        "accepted": ["\"application/json\""],
        "items": [
          {
            "name": "name",
            "type": "string",
            "description": "The platform name"
          },
          {
            "name": "description",
            "type": "string",
            "description": "The platform description"
          }
        ]
      },
      "response": {
        "accepted": ["\"application/json\""],
        "items": [
          {
            "name": "id",
            "type": "integer",
            "description": "The new platform id"
          }
        ]
      },
      "errors": [
        {
          "id": 2,
          "name": "Unauthenticated request",
          "code": 401,
          "description": "The client has not authenticated himself"
        },
        {
          "id": 7,
          "name": "Request is invalid",
          "code": 400,
          "description": "There is some error with the request message"
        },
        {
          "id": 9,
          "name": "Entity already exists",
          "code": 409,
          "description": "The given name already exists in an entity"
        }
      ]
    },
    {
      "name": "Update a platform",
      "method": "put",
      "url": "/platform/{id}",
      "description": "Updates a platform given its updated information",
      "requestBody": {
        "accepted": ["\"application/json\""],
        "items": [
          {
            "name": "name",
            "type": "string",
            "description": "The platform name",
            "optional": true
          },
          {
            "name": "description",
            "type": "string",
            "description": "The platform description",
            "optional": true
          }
        ]
      },
      "request": [
        {
          "name": "id",
          "type": "integer",
          "description": "The platform id to be updated",
          "location": "path"
        },
        {
          "name": "Authorization",
          "type": "string",
          "description": "The authentication token",
          "location": "header"
        }
      ],
      "errors": [
        {
          "id": 2,
          "name": "Unauthenticated request",
          "code": 401,
          "description": "The client has not authenticated himself"
        },
        {
          "id": 7,
          "name": "Request is invalid",
          "code": 400,
          "description": "There is some error with the request message"
        },
        {
          "id": 9,
          "name": "Entity already exists",
          "code": 409,
          "description": "The given name already exists in an entity"
        }
      ]
    },
    {
      "name": "Remove a platform",
      "method": "delete",
      "url": "/platform/{id}",
      "description": "Removes a platform given its id",
      "request": [
        {
          "name": "id",
          "type": "integer",
          "description": "The id of the platform to be deleted",
          "location": "path"
        },
        {
          "name": "Authorization",
          "type": "string",
          "description": "The authentication token",
          "location": "header"
        }
      ],
      "errors": [
        {
          "id": 2,
          "name": "Unauthenticated request",
          "code": 401,
          "description": "The client has not authenticated himself"
        },
        {
          "id": 8,
          "name": "Entity not found",
          "code": 404,
          "description": "The given id does not correspond to an entity"
        }
      ]
    }
  ]
}
